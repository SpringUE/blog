(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-23b6126a"],{"6efe":function(e,n,t){"use strict";t.r(n);var l=t("f2bf");const a={class:"blog-doc-component"},o=Object(l["createStaticVNode"])('<h1>XForm表单</h1><h2 id="bei-jing" tabindex="-1"><a class="header-anchor" href="#bei-jing">¶</a> 背景</h2><p>复杂型表单组件逻辑处理繁琐<br> element-ui没有功能强大的表单组件</p><h2 id="he-xin-gong-neng" tabindex="-1"><a class="header-anchor" href="#he-xin-gong-neng">¶</a> 核心功能</h2><p>*基于element-ui的el-form封装，使用json配置生成表单<br> *支持栅格化布局，支持向右排斥槽位(例如一个为span=4的表单项独占一行)<br> *支持表单项前置&amp;后置插槽<br> *支持任意组件，以及props|events传参<br> *内置依赖联动功能<br> *支持选择任意表单项进行事件监听或者操作赋值等<br> *支持动态插入表单项<br> *支持跨表单项联动<br> *记忆重置功能</p><h2 id="dian-xing-biao-dan" tabindex="-1"><a class="header-anchor" href="#dian-xing-biao-dan">¶</a> 典型表单</h2><p>通过json来配置表单项</p>',7),c=Object(l["createElementVNode"])("pre",null,[Object(l["createElementVNode"])("code",{class:"language-html"},'<template>\n  <XForm ref="test" :schema="test.schema" v-model="test.model" />\n</template>\n\n<script>\n// import XForm from \'XForm\'\nexport default {\n  // components: {XForm},\n  data(vm) {\n    return {\n      test: {\n        schema: [\n          {\n            label: "姓名",\n            field: "name",\n            editor: {\n              component: \'el-input\',\n            }\n          },\n          {\n            label: "性别",\n            field: "sex",\n            editor: {\n              component: \'el-select\',\n              props: {\n                options: [\n                    { label: "男", value: "man" },\n                    { label: "女", value: "women" },\n                  ],\n              }\n            }\n          },\n          {\n            label: "年龄",\n            field: "age",\n            offset: 0,\n            editor: {\n              component: \'el-input\'\n            }\n          },\n        ],\n        model: {\n          name: "",\n          sex: "man",\n          age: null,\n        },\n      },\n    };\n  }\n}\n<\/script>\n')],-1),r=Object(l["createElementVNode"])("h2",{id:"bu-ju",tabindex:"-1"},[Object(l["createElementVNode"])("a",{class:"header-anchor",href:"#bu-ju"},"¶"),Object(l["createTextVNode"])(" 布局")],-1),s=Object(l["createElementVNode"])("p",null,[Object(l["createTextVNode"])("采用栅格化布局"),Object(l["createElementVNode"])("br"),Object(l["createTextVNode"])(" labelWidth属性设置所有表单项label的宽度"),Object(l["createElementVNode"])("br"),Object(l["createTextVNode"])(" span属性设置表单项的局部栅格，默认为8，也就是三列一行"),Object(l["createElementVNode"])("br"),Object(l["createTextVNode"])(" 若要行内表单请根据栅格调整")],-1),m=Object(l["createElementVNode"])("pre",null,[Object(l["createElementVNode"])("code",{class:"language-html"},'<template>\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" />\n</template>\n\n<script>\nexport default {\n  data(vm) {\n    return {\n      test: {\n        schema: [\n          {\n            label: "姓名",\n            span: 8,\n            field: "name",\n            editor: {\n              component: \'el-input\',\n            }\n          },\n          {\n            label: "性别",\n            field: "sex",\n            editor: {\n              component: \'el-select\',\n              props: {\n                options: [\n                    { label: "男", value: "man" },\n                    { label: "女", value: "women" },\n                  ],\n              }\n            }\n          },\n          {\n            label: "年龄",\n            field: "age",\n            offset: 0,\n            editor: {\n              component: \'el-input\'\n            }\n          },\n        ],\n        model: {\n          name: "",\n          sex: "man",\n          age: null,\n        },\n      },\n    };\n  }\n}\n<\/script>\n')],-1),d=Object(l["createElementVNode"])("h2",{id:"du-zhan-yi-xing",tabindex:"-1"},[Object(l["createElementVNode"])("a",{class:"header-anchor",href:"#du-zhan-yi-xing"},"¶"),Object(l["createTextVNode"])(" 独占一行")],-1),i=Object(l["createElementVNode"])("p",null,"表单项中设置offsetRight属性向右排斥槽位即可(栅格)，例如：offsetRight: 16，向右排斥16个栅格",-1),p=Object(l["createElementVNode"])("pre",null,[Object(l["createElementVNode"])("code",{class:"language-html"},'<template>\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</template>\n\n<script>\nexport default {\n  data(vm) {\n    return {\n      test: {\n        schema: [\n          {\n            label: "姓名",\n            span: 8,\n            offsetRight: 16,\n            field: "name",\n            editor: {\n              component: \'el-input\',\n            }\n          },\n          {\n            label: "性别",\n            field: "sex",\n            editor: {\n              component: \'el-select\',\n              props: {\n                options: [\n                    { label: "男", value: "man" },\n                    { label: "女", value: "women" },\n                  ],\n              }\n            }\n          },\n          {\n            label: "年龄",\n            field: "age",\n            offset: 0,\n            editor: {\n              component: \'el-input\'\n            }\n          },\n        ],\n        model: {\n          name: "",\n          sex: "man",\n          age: null,\n        },\n      },\n    };\n  }\n}\n<\/script>\n')],-1),b=Object(l["createElementVNode"])("h2",{id:"an-niu-lan",tabindex:"-1"},[Object(l["createElementVNode"])("a",{class:"header-anchor",href:"#an-niu-lan"},"¶"),Object(l["createTextVNode"])(" 按钮栏")],-1),u=Object(l["createElementVNode"])("p",null,"隐藏按钮栏",-1),h=Object(l["createElementVNode"])("pre",null,[Object(l["createElementVNode"])("code",{class:"language-html"},'<template>\n  <XForm ref="test" :schema="test.schema" v-model="test.model" :showSubmitBar="false" />\n</template>\n\n<script>\nexport default {\n  data(vm) {\n    return {\n      test: {\n        schema: [\n          {\n            label: "姓名",\n            field: "name",\n            editor: {\n              component: \'el-input\',\n            }\n          },\n          {\n            label: "性别",\n            field: "sex",\n            editor: {\n              component: \'el-select\',\n              props: {\n                options: [\n                    { label: "男", value: "man" },\n                    { label: "女", value: "women" },\n                  ],\n              }\n            }\n          },\n          {\n            label: "年龄",\n            field: "age",\n            offset: 0,\n            editor: {\n              component: \'el-input\'\n            }\n          },\n        ],\n        model: {\n          name: "",\n          sex: "man",\n          age: null,\n        },\n      },\n    };\n  }\n}\n<\/script>\n')],-1),f=Object(l["createElementVNode"])("h2",{id:"cha-cao",tabindex:"-1"},[Object(l["createElementVNode"])("a",{class:"header-anchor",href:"#cha-cao"},"¶"),Object(l["createTextVNode"])(" 插槽")],-1),v=Object(l["createElementVNode"])("p",null,"表单项内容区前置, 后置插槽",-1),j=Object(l["createElementVNode"])("pre",null,[Object(l["createElementVNode"])("code",{class:"language-html"},'<template>\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</template>\n\n<script>\nexport default {\n  data(vm) {\n    return {\n      test: {\n        schema: [\n          {\n            label: "姓名",\n            field: "name",\n            editor: {\n              component: \'el-input\',\n            }\n          },\n          {\n            label: "性别",\n            field: "sex",\n            editor: {\n              component: \'el-select\',\n              props: {\n                options: [\n                    { label: "男", value: "man" },\n                    { label: "女", value: "women" },\n                  ],\n              }\n            }\n          },\n          {\n            label: "年龄",\n            field: "age",\n            offset: 0,\n            editor: {\n              component: \'el-input\',\n              prefix(h) {\n                return <span>前置插槽</span>;\n              },\n              suffix(h) {\n                return <span>后置插槽</span>;\n              },\n            }\n          },\n        ],\n        model: {\n          name: "",\n          sex: "man",\n          age: null,\n        },\n      },\n    };\n  }\n}\n<\/script>\n')],-1),O=Object(l["createElementVNode"])("h2",{id:"zu-jian-shu-ru",tabindex:"-1"},[Object(l["createElementVNode"])("a",{class:"header-anchor",href:"#zu-jian-shu-ru"},"¶"),Object(l["createTextVNode"])(" 组件输入")],-1),g=Object(l["createElementVNode"])("p",null,"支持任意形式组件，以及props|events传参",-1),x=Object(l["createElementVNode"])("ul",null,[Object(l["createElementVNode"])("li",null,"Antd组件"),Object(l["createElementVNode"])("li",null,"自定义组件"),Object(l["createElementVNode"])("li",null,"第三方组件"),Object(l["createElementVNode"])("li",null,"Object对象组件")],-1),N=Object(l["createElementVNode"])("pre",null,[Object(l["createElementVNode"])("code",{class:"language-html"},'<template>\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</template>\n\n<script>\nimport { Select } from "element-plus";\nimport { PopSelector } from "@/src/components/PopSelector.vue";\nexport default {\n  data(vm) {\n    return {\n      test: {\n        schema: [\n          {\n            label: "审批人",\n            field: "approver",\n            editor: {\n              component: PopSelector,\n            }\n          },\n          {\n            label: "活动区域",\n            field: "area",\n            editor: {\n              component: Select,\n              props: {\n                options: [],\n              }\n            }\n          },\n          {\n            label: "活动主题",\n            field: "theme",\n            editor: {\n              component: {\n                template: `<el-textarea\n      v-model="value2"\n      placeholder="主题内容..."\n      @change="e => $emit(\'input\', e)"\n      :auto-size="{ minRows: 2, maxRows: 5 }"\n    />`,\n                props: [\'value\'],\n                data() {\n                  return {\n                    value2: \'\'\n                  }\n                }\n              }\n            }\n          },\n        ],\n        model: {\n          approver: "",\n          area: "man",\n          theme: \'\',\n        },\n      },\n    };\n  }\n}\n<\/script>\n\n<style lang="less" scoped>\n.page-container {}\n</style>\n')],-1),V=Object(l["createElementVNode"])("h2",{id:"shi-jian-yu-jian-ting",tabindex:"-1"},[Object(l["createElementVNode"])("a",{class:"header-anchor",href:"#shi-jian-yu-jian-ting"},"¶"),Object(l["createTextVNode"])(" 事件与监听")],-1),w=Object(l["createElementVNode"])("p",null,"支持选择任意表单项进行事件监听或者操作赋值等",-1),E=Object(l["createElementVNode"])("pre",null,[Object(l["createElementVNode"])("code",{class:"language-html"},'<template>\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</template>\n\n<script>\nexport default {\n  data(vm) {\n    return {\n      test: {\n        schema: [\n          {\n            label: "姓名",\n            span: 8,\n            field: "name",\n            editor: {\n              component: \'el-input\',\n            }\n          },\n          {\n            label: "性别",\n            field: "sex",\n            editor: {\n              component: \'el-select\',\n              props: {\n                options: [\n                    { label: "男", value: "man" },\n                    { label: "女", value: "women" },\n                  ],\n              },\n              events: {\n                change($event) {\n                  vm.test.model.age = 20;\n                  debugger\n                },\n              },\n            }\n          },\n          {\n            label: "年龄",\n            field: "age",\n            offset: 0,\n            editor: {\n              component: \'el-input\'\n            }\n          },\n        ],\n        model: {\n          name: "",\n          sex: "man",\n          age: null,\n        },\n      },\n    };\n  }\n}\n<\/script>\n\n<style lang="less" scoped>\n.page-container {}\n</style>\n')],-1),C=Object(l["createElementVNode"])("h2",{id:"refcao-zuo",tabindex:"-1"},[Object(l["createElementVNode"])("a",{class:"header-anchor",href:"#refcao-zuo"},"¶"),Object(l["createTextVNode"])(" ref操作")],-1),y=Object(l["createElementVNode"])("pre",null,[Object(l["createElementVNode"])("code",{class:"language-html"},'<template>\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</template>\n\n<script>\nexport default {\n  data(vm) {\n    return {\n      test: {\n        schema: [\n          {\n            label: "姓名",\n            field: "name",\n            editor: {\n              component: \'el-input\',\n            }\n          },\n          {\n            label: "性别",\n            field: "sex",\n            editor: {\n              component: \'el-select\',\n              props: {\n                options: [\n                    { label: "男", value: "man" },\n                    { label: "女", value: "women" },\n                  ],\n              }\n            }\n          },\n          {\n            label: "年龄",\n            field: "age",\n            offset: 0,\n            editor: {\n              component: \'el-input\'\n            }\n          },\n        ],\n        model: {\n          name: "",\n          sex: "man",\n          age: null,\n        },\n      },\n    };\n  },\n\n  mounted() {\n    const $namesex = this.$refs.test.selectItems(\'name,sex\')\n    const $age = this.$refs.test.selectItems(\'age\')\n    $namesex.on(\'change\', ($event, model, item) => {\n      $age.value(20)\n    })\n  }\n}\n<\/script>\n')],-1),F=Object(l["createElementVNode"])("h2",{id:"yi-lai-lian-dong",tabindex:"-1"},[Object(l["createElementVNode"])("a",{class:"header-anchor",href:"#yi-lai-lian-dong"},"¶"),Object(l["createTextVNode"])(" 依赖联动")],-1),X=Object(l["createElementVNode"])("pre",null,[Object(l["createElementVNode"])("code",{class:"language-html"},'<template>\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</template>\n\n<script>\nexport default {\n  data(vm) {\n    return {\n      test: {\n        schema: [\n          {\n            label: "地区部",\n            field: "region",\n            editor: {\n              component: \'el-select\',\n              props: {\n                options: [],\n              },\n            },\n            effects: {\n              suggest: {\n                loader($event, model, item) {\n                  return Promise.resolve([\n                    { label: "亚太", value: "yt" },\n                    { label: "欧洲", value: "oz" },\n                    { label: "美洲", value: "mz" },\n                  ]);\n                },\n                trigger: \'focus\',\n                times: \'once\',\n                lazy: true,\n              },\n            },\n          },\n          {\n            label: "代表处",\n            field: "regRegion",\n            editor: {\n              component: \'el-select\',\n              props: {\n                options: [],\n              },\n            },\n            effects: {\n              dependency: \'region\',\n              suggest: {\n                loader($event, model, item) {\n                  return Promise.resolve([\n                    { label: "中国代表处", value: "zgdbc" },\n                    { label: "日本代表处", value: "rbdbc" },\n                    { label: "韩国代表处", value: "hgdbc" },\n                  ]);\n                },\n              },\n            },\n          },\n          {\n            label: "国家/地区",\n            field: "country",\n            offset: 0,\n            editor: {\n              component: \'el-select\',\n              props: {\n                options: [],\n              },\n            },\n            effects: {\n              dependency: \'regRegion\',\n              suggest: {\n                loader($event, model, item) {\n                  return Promise.resolve([\n                    { label: "日本", value: "rb" },\n                  ]);\n                },\n              },\n            },\n          },\n        ],\n        model: {\n          region: "",\n          regRegion: "",\n          country: "",\n        },\n      },\n    };\n  }\n}\n<\/script>\n')],-1);function _(e,n,t,_,S,z){const B=Object(l["resolveComponent"])("vue-demo0"),T=Object(l["resolveComponent"])("code-viewer"),W=Object(l["resolveComponent"])("demo-block"),$=Object(l["resolveComponent"])("vue-demo1"),R=Object(l["resolveComponent"])("vue-demo2"),P=Object(l["resolveComponent"])("vue-demo3"),k=Object(l["resolveComponent"])("vue-demo4"),I=Object(l["resolveComponent"])("vue-demo5"),J=Object(l["resolveComponent"])("vue-demo6"),A=Object(l["resolveComponent"])("vue-demo7");return Object(l["openBlock"])(),Object(l["createElementBlock"])("section",a,[o,Object(l["createVNode"])(W,null,{preview:Object(l["withCtx"])(()=>[Object(l["createVNode"])(B)]),source:Object(l["withCtx"])(()=>[Object(l["createVNode"])(T,null,{default:Object(l["withCtx"])(()=>[c]),_:1})]),_:1}),r,s,Object(l["createVNode"])(W,null,{preview:Object(l["withCtx"])(()=>[Object(l["createVNode"])($)]),source:Object(l["withCtx"])(()=>[Object(l["createVNode"])(T,null,{default:Object(l["withCtx"])(()=>[m]),_:1})]),_:1}),d,i,Object(l["createVNode"])(W,null,{preview:Object(l["withCtx"])(()=>[Object(l["createVNode"])(R)]),source:Object(l["withCtx"])(()=>[Object(l["createVNode"])(T,null,{default:Object(l["withCtx"])(()=>[p]),_:1})]),_:1}),b,u,Object(l["createVNode"])(W,null,{preview:Object(l["withCtx"])(()=>[Object(l["createVNode"])(P)]),source:Object(l["withCtx"])(()=>[Object(l["createVNode"])(T,null,{default:Object(l["withCtx"])(()=>[h]),_:1})]),_:1}),f,v,Object(l["createVNode"])(W,null,{preview:Object(l["withCtx"])(()=>[Object(l["createVNode"])(k)]),source:Object(l["withCtx"])(()=>[Object(l["createVNode"])(T,null,{default:Object(l["withCtx"])(()=>[j]),_:1})]),_:1}),O,g,x,Object(l["createVNode"])(T,null,{default:Object(l["withCtx"])(()=>[N]),_:1}),V,w,Object(l["createVNode"])(W,null,{preview:Object(l["withCtx"])(()=>[Object(l["createVNode"])(I)]),source:Object(l["withCtx"])(()=>[Object(l["createVNode"])(T,null,{default:Object(l["withCtx"])(()=>[E]),_:1})]),_:1}),C,Object(l["createVNode"])(W,null,{preview:Object(l["withCtx"])(()=>[Object(l["createVNode"])(J)]),source:Object(l["withCtx"])(()=>[Object(l["createVNode"])(T,null,{default:Object(l["withCtx"])(()=>[y]),_:1})]),_:1}),F,Object(l["createVNode"])(W,null,{preview:Object(l["withCtx"])(()=>[Object(l["createVNode"])(A)]),source:Object(l["withCtx"])(()=>[Object(l["createVNode"])(T,null,{default:Object(l["withCtx"])(()=>[X]),_:1})]),_:1})])}var S={name:"component-doc",components:{"vue-demo0":{template:'<div class="demo-component-root">\n  <XForm ref="test" :schema="test.schema" v-model="test.model" />\n</div>',data(e){return{test:{schema:[{label:"姓名",field:"name",editor:{component:"el-input"}},{label:"性别",field:"sex",editor:{component:"el-select",props:{options:[{label:"男",value:"man"},{label:"女",value:"women"}]}}},{label:"年龄",field:"age",offset:0,editor:{component:"el-input"}}],model:{name:"",sex:"man",age:null}}}}},"vue-demo1":{template:'<div class="demo-component-root">\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" />\n</div>',data(e){return{test:{schema:[{label:"姓名",span:8,field:"name",editor:{component:"el-input"}},{label:"性别",field:"sex",editor:{component:"el-select",props:{options:[{label:"男",value:"man"},{label:"女",value:"women"}]}}},{label:"年龄",field:"age",offset:0,editor:{component:"el-input"}}],model:{name:"",sex:"man",age:null}}}}},"vue-demo2":{template:'<div class="demo-component-root">\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</div>',data(e){return{test:{schema:[{label:"姓名",span:8,offsetRight:16,field:"name",editor:{component:"el-input"}},{label:"性别",field:"sex",editor:{component:"el-select",props:{options:[{label:"男",value:"man"},{label:"女",value:"women"}]}}},{label:"年龄",field:"age",offset:0,editor:{component:"el-input"}}],model:{name:"",sex:"man",age:null}}}}},"vue-demo3":{template:'<div class="demo-component-root">\n  <XForm ref="test" :schema="test.schema" v-model="test.model" :showSubmitBar="false" />\n</div>',data(e){return{test:{schema:[{label:"姓名",field:"name",editor:{component:"el-input"}},{label:"性别",field:"sex",editor:{component:"el-select",props:{options:[{label:"男",value:"man"},{label:"女",value:"women"}]}}},{label:"年龄",field:"age",offset:0,editor:{component:"el-input"}}],model:{name:"",sex:"man",age:null}}}}},"vue-demo4":{template:'<div class="demo-component-root">\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</div>',data(e){return{test:{schema:[{label:"姓名",field:"name",editor:{component:"el-input"}},{label:"性别",field:"sex",editor:{component:"el-select",props:{options:[{label:"男",value:"man"},{label:"女",value:"women"}]}}},{label:"年龄",field:"age",offset:0,editor:{component:"el-input",prefix(e){return Object(l["createVNode"])("span",null,[Object(l["createTextVNode"])("前置插槽")])},suffix(e){return Object(l["createVNode"])("span",null,[Object(l["createTextVNode"])("后置插槽")])}}}],model:{name:"",sex:"man",age:null}}}}},"vue-demo5":{template:'<div class="demo-component-root">\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</div>',data(e){return{test:{schema:[{label:"姓名",span:8,field:"name",editor:{component:"el-input"}},{label:"性别",field:"sex",editor:{component:"el-select",props:{options:[{label:"男",value:"man"},{label:"女",value:"women"}]},events:{change(n){e.test.model.age=20}}}},{label:"年龄",field:"age",offset:0,editor:{component:"el-input"}}],model:{name:"",sex:"man",age:null}}}}},"vue-demo6":{template:'<div class="demo-component-root">\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</div>',data(e){return{test:{schema:[{label:"姓名",field:"name",editor:{component:"el-input"}},{label:"性别",field:"sex",editor:{component:"el-select",props:{options:[{label:"男",value:"man"},{label:"女",value:"women"}]}}},{label:"年龄",field:"age",offset:0,editor:{component:"el-input"}}],model:{name:"",sex:"man",age:null}}}},mounted(){const e=this.$refs.test.selectItems("name,sex"),n=this.$refs.test.selectItems("age");e.on("change",(e,t,l)=>{n.value(20)})}},"vue-demo7":{template:'<div class="demo-component-root">\n  <XForm ref="test" :schema="test.schema" v-model="test.model" labelWidth="120px" :showSubmitBar="false" />\n</div>',data(e){return{test:{schema:[{label:"地区部",field:"region",editor:{component:"el-select",props:{options:[]}},effects:{suggest:{loader(e,n,t){return Promise.resolve([{label:"亚太",value:"yt"},{label:"欧洲",value:"oz"},{label:"美洲",value:"mz"}])},trigger:"focus",times:"once",lazy:!0}}},{label:"代表处",field:"regRegion",editor:{component:"el-select",props:{options:[]}},effects:{dependency:"region",suggest:{loader(e,n,t){return Promise.resolve([{label:"中国代表处",value:"zgdbc"},{label:"日本代表处",value:"rbdbc"},{label:"韩国代表处",value:"hgdbc"}])}}}},{label:"国家/地区",field:"country",offset:0,editor:{component:"el-select",props:{options:[]}},effects:{dependency:"regRegion",suggest:{loader(e,n,t){return Promise.resolve([{label:"日本",value:"rb"}])}}}}],model:{region:"",regRegion:"",country:""}}}}}}},z=t("b9a6"),B=t.n(z);const T=B()(S,[["render",_]]);n["default"]=T},b9a6:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=(e,n)=>{const t=e.__vccOpts||e;for(const[l,a]of n)t[l]=a;return t}}}]);