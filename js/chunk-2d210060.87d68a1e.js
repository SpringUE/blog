(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d210060"],{b5b9:function(s){s.exports=JSON.parse('[{"id":"solution1001","title":"前端工程化、量化","desc":"自从前端开发工程师这个称谓出现以来，前端的发展可谓日新月异，前端技术层出不穷，相比后端而言，虽然较晚出现，但其增长速度是其他领域不能比拟的，近来时间比较充裕，回想一下自己的开发之路，从原来的页面切图到后端的填充模板，再到现在的前后端分离，以及nodejs的出现，现在大火的大前端，算是见证了前端的发展历程，接下来从以下几方面谈一谈我对前端工程化的理解。","sourceType":"Object","sourceUrl":"","tags":[],"status":"0"},{"id":"solution1002","title":"微前端","desc":"微前端主要是借鉴后端微服务的概念。简单地说，就是将一个巨无霸（Monolith）的前端工程拆分成一个一个的小工程。","sourceType":"Object","sourceUrl":"","tags":[],"status":"0"},{"id":"solution1003","title":"动态路由权限控制","desc":"通过接口获得用户权限菜单，匹配生产前端路由表，并预设一般固定路由，如404，403，登录等","sourceType":"Object","sourceUrl":"","tags":[],"status":"0"},{"id":"solution10031","title":"Vue大型项目API管理","desc":"1.API独立管理； 2.按模块拆分； 3.拦截控制； 4.响应数据一致化； 5.消息提示","sourceType":"Object","sourceUrl":"","tags":[],"status":"0"},{"id":"solution1004","title":"复杂表单","desc":"在前端开发的工作当中，表单的开发占据了很大的一部分。表单页面和报表页面是中后台业务的主要展现形式，但随着业务越来越复杂，表单开发和维护成为了前端工程师一个无法逃避的痛点。","sourceType":"Object","sourceUrl":"","tags":[],"status":"0"},{"id":"solution1005","title":"复杂表格","desc":"一个基于 vue 的 PC 端表格组件，支持增删改查、虚拟滚动、懒加载、快捷菜单、数据校验、树形结构、打印导出、表单渲染、数据分页、虚拟列表、模态窗口、自定义模板、渲染器、非常灵活的配置项、扩展接口等","sourceType":"Object","sourceUrl":"","tags":[],"status":"0"},{"id":"solution1006","title":"虚拟滚动列表","desc":"只渲染可视范围内的dom,通过复用超出可视范围的dom达到提高性能的目的","sourceType":"Object","sourceUrl":"","tags":[],"status":"0"}]')}}]);